name: Tier 1
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'LICENSE.md'
      - 'README.md'
      - '.github/**'
      - 'docs/**'
      - 'validation/**'
      - 'test/validation**'
      - 'change.log'
      - '.gitignore'
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'LICENSE.md'
      - 'README.md'
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['1.8', '1.10', '1']
        julia-arch: [x64]
        os: [ubuntu-latest, windows-latest]
        include:
          - os: macOS-latest
            julia-arch: 'aarch64'
            julia-version: '1'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.version == '1' && matrix.arch == 'x64' }}
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
